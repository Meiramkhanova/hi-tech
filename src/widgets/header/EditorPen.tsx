"use client";

import { useEffect, useMemo, useState } from "react";
import Link from "next/link";
import { Pencil } from "lucide-react";
import { usePathname } from "next/navigation";
import { useLocale } from "next-intl";

type StrapiType = {
  uid: string;
  apiID: string;
  kind: "singleType" | "collectionType";
};

const LOCALES = ["ru", "kk", "en"] as const;

// –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–æ–∫ –¥–ª—è –º–∞—Ç—á–∏–Ω–≥–∞ ("Lab-Direction" ‚Üí "labdirection")
function norm(s: string) {
  return s.toLowerCase().replace(/[^a-z0-9]/g, "");
}

// –ü—Ä–∏–º–∏—Ç–∏–≤–Ω–∞—è ¬´—Å–∏–Ω–≥—É–ª–∞—Ä–∏–∑–∞—Ü–∏—è¬ª: projects ‚Üí project, companies ‚Üí company
function singularize(s: string) {
  if (s.endsWith("ies")) return s.slice(0, -3) + "y";
  if (s.endsWith("ses")) return s.slice(0, -2);
  if (s.endsWith("s")) return s.slice(0, -1);
  return s;
}

// –ö–∞—Ä—Ç–∞ —è–≤–Ω—ã—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π ¬´—Å–µ–≥–º–µ–Ω—Ç URL ‚Üí apiID¬ª –¥–ª—è single-—Ç–∏–ø–æ–≤
// (–º–∏–Ω–∏–º—É–º ‚Äî homepage, about, analytics c –æ–ø–µ—á–∞—Ç–∫–æ–π –∏ —Ç.–ø.)
const overrideSingles: Record<string, string> = {
  "": "homepage", // / ‚Üí homepage
  home: "homepage",
  about: "aboutpage",
  contact: "contactpage",
  analytics: "analytycspage", // –∫–∞–∫ –≤ —Ç–≤–æ—ë–º –¥–∞–º–ø–µ
};

// –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–π (–µ—Å–ª–∏ –Ω–∞–¥–æ –ø–æ–¥–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ä–º—É)
const overrideCollections: Record<string, string> = {
  projects: "project",
  experts: "expert",
  tabs: "tab",
  partners: "partner",
};

export default function EditorPen() {
  const [isAdmin, setIsAdmin] = useState(false);
  const [adminUrl, setAdminUrl] = useState<string | null>(null);

  const pathname = usePathname();
  const localeFromIntl = useLocale();
  const backendUrl =
    process.env.NEXT_PUBLIC_BACKEND_URL || "http://localhost:1337";

  // —á–∏—Ç–∞–µ–º —Ç–∏–ø—ã –æ–¥–∏–Ω —Ä–∞–∑ –∏–∑ localStorage (–µ—Å–ª–∏ –æ–Ω–∏ —É–∂–µ –∑–∞–∫–∞—á–∞–Ω—ã —Ö–æ—Ç–∫–µ–µ–º)
  const strapiTypes: StrapiType[] = useMemo(() => {
    try {
      return JSON.parse(localStorage.getItem("strapiTypes") || "[]");
    } catch {
      return [];
    }
  }, [isAdmin]); // –ø–µ—Ä–µ—á–∏—Ç—ã–≤–∞—Ç—å, –∫–æ–≥–¥–∞ –≤–∫–ª—é—á–∏–ª–∏ admin-—Ä–µ–∂–∏–º

  useEffect(() => {
    const checkAdmin = () =>
      setIsAdmin(localStorage.getItem("isAdmin") === "true");
    checkAdmin();
    window.addEventListener("storage", checkAdmin);
    return () => window.removeEventListener("storage", checkAdmin);
  }, []);

  useEffect(() => {
    if (!isAdmin) return;

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º, —á—Ç–æ–±—ã –Ω–µ ¬´–∑–∞–ª–∏–ø–∞–ª–∞¬ª —Å—Ç–∞—Ä–∞—è —Å—Å—ã–ª–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, homepage)
    setAdminUrl(null);

    // --- —Ä–∞–∑–±–æ—Ä –ø—É—Ç–∏ –∏ –ª–æ–∫–∞–ª–∏
    const raw = pathname.split("/").filter(Boolean);
    let locale = (localeFromIntl as (typeof LOCALES)[number]) || "ru";

    const parts = (() => {
      if (raw[0] && (LOCALES as readonly string[]).includes(raw[0])) {
        locale = raw[0] as (typeof LOCALES)[number];
        return raw.slice(1);
      }
      return raw;
    })();

    // –∫–æ—Ä–µ–Ω—å —Å–∞–π—Ç–∞ ‚Üí single homepage
    const firstSeg = parts[0] ?? "";

    // === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü —Ç–∏–ø–∞ /ru/[slug] –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ tab-content ===
    if (parts.length === 1 && firstSeg) {
      const slug = firstSeg;
      const localeParam = `plugins[i18n][locale]=${encodeURIComponent(locale)}`;

      fetch(
        `${backendUrl}/api/tab-contents?filters[slug]=${encodeURIComponent(
          slug
        )}&fields=documentId,id&populate[sections][populate]=*&locale=${locale}`,
        {
          headers: { "Content-Type": "application/json" },
        }
      )
        .then((r) => r.json())
        .then((data) => {
          console.log("üîé –û—Ç–≤–µ—Ç –æ—Ç Strapi:", data);

          const entry = data?.data?.[0];
          const id = entry?.documentId || entry?.id;

          if (id) {
            // ‚úÖ –µ—Å–ª–∏ –Ω–∞—à–ª–∏ –∑–∞–ø–∏—Å—å ‚Äî –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            setAdminUrl(
              `${backendUrl}/admin/content-manager/collection-types/api::tab-content.tab-content/${id}?${localeParam}`
            );
          } else {
            // ‚ùå –µ—Å–ª–∏ slug –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
            console.warn("‚ùå –ù–µ –Ω–∞—à–ª–∏ slug:", slug);
            setAdminUrl(
              `${backendUrl}/admin/content-manager/collection-types/api::tab-content.tab-content?${localeParam}`
            );
          }
        })
        .catch((err) => {
          console.error("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ tab-contents:", err);
          setAdminUrl(
            `${backendUrl}/admin/content-manager/collection-types/api::tab-content.tab-content?${localeParam}`
          );
        });

      return;
    }

    // –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
    const singles = strapiTypes.filter((t) => t.kind === "singleType");
    const collections = strapiTypes.filter((t) => t.kind === "collectionType");

    const firstSegNorm = norm(firstSeg);
    const firstSegSingular = singularize(firstSegNorm);

    // ---------- 1) –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å single-type
    let single: StrapiType | undefined;

    // —á–µ—Ä–µ–∑ override
    if (overrideSingles[firstSeg]) {
      const desired = norm(overrideSingles[firstSeg]);
      single = singles.find((s) => norm(s.apiID) === desired);
    }

    // –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ override ‚Äî –ø—Ä–æ–±—É–µ–º —ç–≤—Ä–∏—Å—Ç–∏–∫—É:
    if (!single) {
      // —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ apiID
      single = singles.find((s) => norm(s.apiID) === firstSegNorm);
    }
    if (!single && firstSeg === "") {
      // –∫–æ—Ä–µ–Ω—å ‚Üí homepage
      single = singles.find((s) => norm(s.apiID) === "homepage");
    }
    if (!single) {
      // –ø—Ä–µ—Ñ–∏–∫—Å/–ø–æ—Ö–æ–∂–µ—Å—Ç—å (about ‚Üî aboutpage)
      single = singles.find((s) => {
        const id = norm(s.apiID);
        return id.startsWith(firstSegNorm) || firstSegNorm.startsWith(id);
      });
    }

    // ---------- 2) –ï—Å–ª–∏ single –Ω–∞–π–¥–µ–Ω –∏ —ç—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±–µ–∑ –¥–æ–ø. —Å–µ–≥–º–µ–Ω—Ç–æ–≤ ‚Äî –∫–∏–¥–∞–µ–º –≤ single
    if (single && parts.length <= 1) {
      const qs = new URLSearchParams({
        "plugins[i18n][locale]": locale,
      }).toString();
      setAdminUrl(
        `${backendUrl}/admin/content-manager/single-types/${single.uid}?${qs}`
      );
      return;
    }

    // ---------- 3) –ò–Ω–∞—á–µ —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ —ç—Ç–æ –∫–æ–ª–ª–µ–∫—Ü–∏—è
    // —á–µ—Ä–µ–∑ override
    let collection: StrapiType | undefined;
    if (overrideCollections[firstSeg]) {
      const desired = norm(overrideCollections[firstSeg]);
      collection = collections.find((c) => norm(c.apiID) === desired);
    }

    // –±–µ–∑ override ‚Äî –º–∞—Ç—á–∏–º —ç–≤—Ä–∏—Å—Ç–∏–∫–æ–π
    if (!collection) {
      collection =
        collections.find((c) => norm(c.apiID) === firstSegNorm) ||
        collections.find((c) => norm(c.apiID) === firstSegSingular) ||
        collections.find((c) => {
          const id = norm(c.apiID);
          // projects ‚Üî project, lab-direction ‚Üî labdirection
          return id === singularize(id) && id === firstSegSingular;
        }) ||
        collections.find((c) => {
          const id = norm(c.apiID);
          // –º—è–≥–∫–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ –Ω–∞—á–∞–ª—É/–≤–∫–ª—é—á–µ–Ω–∏—é
          return (
            id.startsWith(firstSegSingular) || firstSegSingular.startsWith(id)
          );
        });
    }

    if (!collection) {
      // –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∏—á–µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å ‚Äî –ª—É—á—à–µ –º–æ–ª—á–∞ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É
      setAdminUrl(`${backendUrl}/admin`);
      return;
    }

    const qsBase = `plugins[i18n][locale]=${encodeURIComponent(locale)}`;

    // –µ—Å–ª–∏ –µ—Å—Ç—å —Å–ª–∞–≥ ‚Üí –∏—â–µ–º id –∏ –≤–µ–¥—ë–º –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å
    const maybeSlug = parts[1];
    if (maybeSlug) {
      // –í–ê–ñ–ù–û: –ø–æ–ª–µ slug –¥–æ–ª–∂–Ω–æ —Ä–µ–∞–ª—å–Ω–æ –Ω–∞–∑—ã–≤–∞—Ç—å—Å—è slug
      fetch(
        `${backendUrl}/api/${
          collection.apiID
        }?filters[slug][$eq]=${encodeURIComponent(
          maybeSlug
        )}&fields=id&locale=${encodeURIComponent(locale)}`,
        { headers: { "Content-Type": "application/json" } }
      )
        .then((r) => r.json())
        .then((data) => {
          const id = data?.data?.[0]?.id;
          if (id) {
            setAdminUrl(
              `${backendUrl}/admin/content-manager/collection-types/${collection.uid}/${id}?${qsBase}`
            );
          } else {
            setAdminUrl(
              `${backendUrl}/admin/content-manager/collection-types/${collection.uid}?${qsBase}`
            );
          }
        })
        .catch(() => {
          setAdminUrl(
            `${backendUrl}/admin/content-manager/collection-types/${collection.uid}?${qsBase}`
          );
        });
    } else {
      // –Ω–µ—Ç —Å–ª–∞–≥–∞ ‚Äî –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
      setAdminUrl(
        `${backendUrl}/admin/content-manager/collection-types/${collection.uid}?${qsBase}`
      );
    }
  }, [isAdmin, pathname, localeFromIntl, backendUrl, strapiTypes]);

  if (!isAdmin) return null;

  return (
    <Link
      href={adminUrl ?? ""}
      target="_blank"
      className="flex items-center gap-2 text-gray-700 hover:text-black bg-white shadow-md rounded-full px-4 py-2">
      <Pencil size={20} />
      <span>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</span>
    </Link>
  );
}
